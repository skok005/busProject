package chatbots;



import java.io.IOException;
import java.util.regex.Pattern;

import javax.servlet.http.HttpSession;
import javax.websocket.EndpointConfig;
import javax.websocket.OnClose;
import javax.websocket.OnError;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;

import Member.MemberDTO;

@ServerEndpoint("/admin")
public class Admin {


	private static Session admin = null;	
	private static Pattern pat = Pattern.compile("^\\{\\{.*?\\}\\}");
	private HttpSession httpSess;
	EndpointConfig cfg;
	MemberDTO memDTO;
	
	
	@OnOpen	
	public void handleOpen(Session wsSess) {
	  if (admin != null) {													//static admin 에 관리자정보가 있나확인	
	    try {	
	      admin.close();														// 있으면 session 닫기
	    } catch (IOException e) {}	
	  }	
	  admin = wsSess;	 															// 현재 접속관리자에게 관리자세션을 설정
	  for(String sUser : webChat33.getClientIds()) {	// structureClass 회원접속 리스트(이름) for문 반복
	    visit(sUser);																// 관리자에게 접속자리스트 전송
	  }	
	}	
	
	
	@OnMessage	
	public void handleMessage(String msgs, Session wsSess) throws IOException {
		System.out.println("admin.jsp sendmessage");
		System.out.println("WSSession = " + wsSess + ",msgs = " + msgs);
	  String[] split = msgs.split("#####", 2);				// 상태코드/사용자/메세지 
	  String user = split[0];	
	  String msg = split[1];	
		System.out.println("user = " + user + ",msg = " + msg);
//		final String msg = msgs.replaceAll(pat.pattern(), "");
//		final String uname = name.replaceFirst("^\\{\\{", "").replaceFirst("\\}\\}$", "");
	  //webChat3.mC(msg, wsSess);// send Msg to a ClientId
	  webChat33.sendMessage(msg,wsSess);// send Msg to a ClientId
	}
	
	@OnClose	
	public void handleClose(Session wsSess) {	
	  admin = null;	
	}
	
	@OnError	
	public void handleError(Throwable e, Session wsSess) {	
	  System.out.println("wsSess = " + wsSess +", 클라이언트가 오류가 났습니다.");
	  System.out.println("클라이언트가 오류가 났습니다.");
	  //e.printStackTrace();	
	}	
	
	

	// 사용자가 관리자에게 보내는 메세지 용도
	private static void send(String msgs) {	
	  if (admin != null) {
	    try {	
	      admin.getBasicRemote().sendText(msgs);	
	    } catch (IOException e) {	
	      e.printStackTrace();	
	    }	
	  }	
	}

	public static void sendMessage(MemberDTO memDTO, String msgs) {		
	  send("{\"status\":\"message\", \"user\":\"" + memDTO.getM_id() + "\", \"message\":\"" + msgs + "\"}");	
	}
	public static void visit(MemberDTO memDTO) {
	  send("{\"status\":\"visit\", \"user\":\"" + memDTO.getM_id() + "\"}");	
	}
	public static void bye(MemberDTO memDTO) {	
	  send("{\"status\":\"bye\", \"user\":\"" + memDTO.getM_id() + "\"}");	
	}

}